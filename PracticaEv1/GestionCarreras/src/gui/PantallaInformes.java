/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import Logica.LogicaAplicacion;
import java.awt.Desktop;
import java.io.File;
import java.io.IOException;
import java.util.HashMap;
import java.util.Map;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import net.sf.jasperreports.engine.*;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import org.openide.util.Exceptions;

/**
 *
 * @author dbarriof
 */
public class PantallaInformes extends javax.swing.JDialog {

    private LogicaAplicacion logicaAplicacion;

    /**
     * Creates new form PantallaInformes
     *
     * @param parent
     * @param modal
     * @param logicaAplicacion
     */
    public PantallaInformes(java.awt.Frame parent, boolean modal, LogicaAplicacion logicaAplicacion) {
        super(parent, modal);
        this.logicaAplicacion = logicaAplicacion;
        initComponents();
        jComboBoxCarreras.setEnabled(false);
        jComboBoxCorredores.setEnabled(false);
        jButtonGenerarInforme.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelPanelInformes = new javax.swing.JPanel();
        jComboBoxTipoInforme = new javax.swing.JComboBox<>();
        jLabelTipoInforme = new javax.swing.JLabel();
        jLabelCarrera = new javax.swing.JLabel();
        jLabelCorredor = new javax.swing.JLabel();
        jLabelTitulo = new javax.swing.JLabel();
        jButtonGenerarInforme = new javax.swing.JButton();
        jComboBoxCarreras = new javax.swing.JComboBox<>();
        jComboBoxCorredores = new javax.swing.JComboBox<>();
        jButtonVolver = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(600, 325));
        setResizable(false);

        jComboBoxTipoInforme.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", "Todas las carreras sin disputar", "Datos de una carrera", "Clasificación de una carrera", "Datos de un corredor" }));
        jComboBoxTipoInforme.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxTipoInformeActionPerformed(evt);
            }
        });

        jLabelTipoInforme.setText("Tipo de informe :");

        jLabelCarrera.setText("Selecciona Carrera :");

        jLabelCorredor.setText("Selecciona Corredor:");

        jLabelTitulo.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabelTitulo.setText("Módulo de Informes");

        jButtonGenerarInforme.setText("Generar Informe");
        jButtonGenerarInforme.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGenerarInformeActionPerformed(evt);
            }
        });

        jComboBoxCarreras.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jComboBoxCorredores.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout jPanelPanelInformesLayout = new javax.swing.GroupLayout(jPanelPanelInformes);
        jPanelPanelInformes.setLayout(jPanelPanelInformesLayout);
        jPanelPanelInformesLayout.setHorizontalGroup(
            jPanelPanelInformesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelPanelInformesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelPanelInformesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanelPanelInformesLayout.createSequentialGroup()
                        .addComponent(jLabelTipoInforme, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jComboBoxTipoInforme, 0, 420, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanelPanelInformesLayout.createSequentialGroup()
                        .addComponent(jLabelCarrera, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jComboBoxCarreras, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanelPanelInformesLayout.createSequentialGroup()
                        .addComponent(jLabelCorredor, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jComboBoxCorredores, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jLabelTitulo, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonGenerarInforme))
                .addGap(16, 16, 16))
        );
        jPanelPanelInformesLayout.setVerticalGroup(
            jPanelPanelInformesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelPanelInformesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelPanelInformesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxTipoInforme, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelTipoInforme))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelPanelInformesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelCarrera)
                    .addComponent(jComboBoxCarreras, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelPanelInformesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelCorredor)
                    .addComponent(jComboBoxCorredores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jButtonGenerarInforme)
                .addContainerGap(27, Short.MAX_VALUE))
        );

        jButtonVolver.setText("Volver");
        jButtonVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonVolverActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jPanelPanelInformes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButtonVolver)
                        .addGap(27, 27, 27))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelPanelInformes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jButtonVolver)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Metodo que permite la recarga en tiempo de ejecucion los combobox con los datos necesarios para generar los informes
     * @param evt 
     */
    private void jComboBoxTipoInformeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxTipoInformeActionPerformed
       
        if(jComboBoxTipoInforme.getSelectedIndex() == 0 || jComboBoxTipoInforme.getSelectedIndex() == 1){ 
            jComboBoxCarreras.setEnabled(false);
            jComboBoxCorredores.setEnabled(false); 
            
            if(jComboBoxTipoInforme.getSelectedIndex() == 1){
                jButtonGenerarInforme.setEnabled(true);
            } else {
                 jButtonGenerarInforme.setEnabled(false);
            }
            
        }
        if(jComboBoxTipoInforme.getSelectedIndex() == 2){
            jComboBoxCarreras.setEnabled(true);
            jComboBoxCarreras.setModel(new DefaultComboBoxModel(logicaAplicacion.cargaComboCarreras().toArray()));
            jComboBoxCorredores.setEnabled(false);
            
            if(logicaAplicacion.cargaComboCarreras().isEmpty()){              
                jButtonGenerarInforme.setEnabled(false);
                JOptionPane.showMessageDialog(this, "No hay carreras creadas todavía", "Mensaje", JOptionPane.INFORMATION_MESSAGE);
            } else {
                 jButtonGenerarInforme.setEnabled(true);
            }
        }
        if(jComboBoxTipoInforme.getSelectedIndex() == 3){
            jComboBoxCarreras.setEnabled(true);
            jComboBoxCarreras.setModel(new DefaultComboBoxModel(logicaAplicacion.cargaComboCarrerasFinalizadas().toArray()));
            jComboBoxCorredores.setEnabled(false);
            
            if(logicaAplicacion.cargaComboCarrerasFinalizadas().isEmpty()){
                jButtonGenerarInforme.setEnabled(false);
                JOptionPane.showMessageDialog(this, "No hay carreras finalizadas todavía", "Mensaje", JOptionPane.INFORMATION_MESSAGE);
            } else {
                 jButtonGenerarInforme.setEnabled(true);
            }
        }
        if(jComboBoxTipoInforme.getSelectedIndex() == 4){
            jComboBoxCarreras.setEnabled(false);
            jComboBoxCorredores.setEnabled(true);
            jComboBoxCorredores.setModel(new DefaultComboBoxModel(logicaAplicacion.cargaComboCorredores().toArray()));
            
            if(logicaAplicacion.cargaComboCorredores().isEmpty()){
                jButtonGenerarInforme.setEnabled(false);
                JOptionPane.showMessageDialog(this, "No hay corredores inscritos todavía", "Mensaje", JOptionPane.INFORMATION_MESSAGE);
            } else {
                 jButtonGenerarInforme.setEnabled(true);
            }
        }
    }//GEN-LAST:event_jComboBoxTipoInformeActionPerformed
    
    
    /**
     * Metodo que permite gestionar la ubicación del informe y llamar al metodo que genera el informe pasandole los parametros necesarios para generarlo, informando del resultado por pantalla al usuario
     * @param evt 
     */
    private void jButtonGenerarInformeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGenerarInformeActionPerformed
     
        int numInforme = jComboBoxTipoInforme.getSelectedIndex();
        
        JFileChooser ruta = new JFileChooser();
        ruta.setFileSelectionMode(JFileChooser.FILES_ONLY);
        ruta.setSelectedFile(new File((String)jComboBoxTipoInforme.getSelectedItem()+".pdf"));
        ruta.showSaveDialog(ruta);
        File archivo = ruta.getSelectedFile();
                
        //En función del número de informe enviamos al método generador pasando los parámetros necesarios
        
//if(archivo != null){     
            switch(numInforme){
                case 1:
                    logicaAplicacion.generarInforme(numInforme, archivo.toString(), null, null);
                    break;
                case 2:
                    //Pasamos como parametro el nombre de la carrera y como no se necesitan datos del corredor se pasa el campo como null
                    logicaAplicacion.generarInforme(numInforme, archivo.toString(), (String) jComboBoxCarreras.getSelectedItem(), null);                
                    break;
                case 3:
                    //Pasamos como parametro el nombre de la carrera y como no se necesitan datos del corredor se pasa el campo como null
                    logicaAplicacion.generarInforme(numInforme, archivo.toString(), (String) jComboBoxCarreras.getSelectedItem(), null);
                    break;
                case 4:
                    //Pasamos como parametro el nombre del corredor y como no se necesitan datos de carreras se pasa el campo como null
                    logicaAplicacion.generarInforme(numInforme, archivo.toString(), null, (String) jComboBoxCorredores.getSelectedItem());
                    break;
                default:
                    System.out.println("Problema con el numero de informe");
                    JOptionPane.showMessageDialog(this, "Se ha producido un error al crear el informe", "Error", JOptionPane.ERROR_MESSAGE); 
                    break;
            }
            
//}
        
        if(archivo.exists()){
            int verInforme = JOptionPane.showConfirmDialog(this, "El informe se ha creado correctamente \n ¿Desea ver el informe ahora?", "Mensaje", JOptionPane.YES_NO_OPTION);
            if(verInforme == JOptionPane.YES_OPTION){
                try {
                    Desktop.getDesktop().open(archivo);
                } catch (IOException ex) {
                    JOptionPane.showMessageDialog(this, "Se ha producido un error al intentar mostrar el informe", "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
        } else {
            System.out.println("Problema tras intentar generar el informe");
            JOptionPane.showMessageDialog(this, "Se ha producido un error al crear el informe", "Error", JOptionPane.ERROR_MESSAGE);
        }
        
    }//GEN-LAST:event_jButtonGenerarInformeActionPerformed

    private void jButtonVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonVolverActionPerformed
        dispose();
    }//GEN-LAST:event_jButtonVolverActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonGenerarInforme;
    private javax.swing.JButton jButtonVolver;
    private javax.swing.JComboBox<String> jComboBoxCarreras;
    private javax.swing.JComboBox<String> jComboBoxCorredores;
    private javax.swing.JComboBox<String> jComboBoxTipoInforme;
    private javax.swing.JLabel jLabelCarrera;
    private javax.swing.JLabel jLabelCorredor;
    private javax.swing.JLabel jLabelTipoInforme;
    private javax.swing.JLabel jLabelTitulo;
    private javax.swing.JPanel jPanelPanelInformes;
    // End of variables declaration//GEN-END:variables
}
