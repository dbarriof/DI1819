package gui;

import Dto.Carrera;
import Dto.Corredor;
import gui.Recursos.FormatoFechaTabla;
import gui.modelosTabla.CorredoresTableModel;
import Logica.LogicaAplicacion;
import gui.Recursos.OrdenadorTablas;
import java.awt.Frame;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.File;
import java.util.ArrayList;
import javax.swing.JOptionPane;

/**
 *
 * @author dbarriof
 */
public class PantallaListaCorredores extends javax.swing.JDialog {

    private LogicaAplicacion logicaAplicacion;
    private Carrera carrera;
    private ArrayList<Corredor> corredoresDisponibles;

    /**
     * Constructor para ver el listado completo de corredores dados de alta en
     * la aplicación
     *
     * @param parent
     * @param modal
     * @param logicaAplicacion
     */
    public PantallaListaCorredores(java.awt.Frame parent, boolean modal, LogicaAplicacion logicaAplicacion) {
        super(parent, modal);
        this.logicaAplicacion = logicaAplicacion;
        initComponents();
        cargarTabla();

        this.addWindowListener(new WindowAdapter() {
            @Override
            public void windowActivated(WindowEvent we) {
                cargarTabla();
            }
        });

        jButtonAniadirCorredorNuevo.setVisible(true);
        jButtonAniadirCorredorCarrera.setVisible(false);
        jLabelTitular.setText("Listado de corredores:");
    }

    /**
     * Constructor para ver el listado de corredores importados desde un fichero
     *
     * @param parent
     * @param modal
     * @param logicaAplicacion
     * @param archivo
     */
    public PantallaListaCorredores(java.awt.Frame parent, boolean modal, LogicaAplicacion logicaAplicacion, File archivo) {
        super(parent, modal);
        this.logicaAplicacion = logicaAplicacion;
        logicaAplicacion.importarCorredores(archivo);
        initComponents();
        cargarTabla();
        jButtonAniadirCorredorNuevo.setVisible(false);
        jButtonAniadirCorredorCarrera.setVisible(false);
        jLabelTitular.setText("Corredores importados:");
    }

    /**
     * Constructor para mostrar listado de corredores y dar de alta en una
     * carrera
     *
     * @param parent
     * @param modal
     * @param logicaAplicacion
     * @param carrera
     */
    public PantallaListaCorredores(java.awt.Frame parent, boolean modal, LogicaAplicacion logicaAplicacion, Carrera carrera) {
        super(parent, modal);
        this.logicaAplicacion = logicaAplicacion;
        this.carrera = carrera;
        corredoresDisponibles = logicaAplicacion.verCorredoresDisponibles();
        initComponents();
        cargarTablaCorredoresDisponibles();

        this.addWindowListener(new WindowAdapter() {
            @Override
            public void windowActivated(WindowEvent we) {
                cargarTablaCorredoresDisponibles();
            }
        });
        jLabelTitular.setText("Listado de corredores:");
    }

    private void cargarTablaCorredoresDisponibles() {
        CorredoresTableModel ctm = new CorredoresTableModel(corredoresDisponibles);
        jTableCorredores.setModel(ctm);
        jTableCorredores.setRowSorter(OrdenadorTablas.ordenaTabla(ctm, 0));
        jTableCorredores.getColumnModel().getColumn(2).setCellRenderer(new FormatoFechaTabla());
    }

    public void cargarTabla() {
        CorredoresTableModel ctm = new CorredoresTableModel(logicaAplicacion.verCorredores());
        jTableCorredores.setModel(ctm);
        jTableCorredores.setRowSorter(OrdenadorTablas.ordenaTabla(ctm, 0));
        jTableCorredores.getColumnModel().getColumn(2).setCellRenderer(new FormatoFechaTabla());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelCorredores = new javax.swing.JPanel();
        jButtonBorrarCorredor = new javax.swing.JButton();
        jLabelTitular = new javax.swing.JLabel();
        jScrollPaneCorredores = new javax.swing.JScrollPane();
        jTableCorredores = new javax.swing.JTable();
        jButtonAniadirCorredorCarrera = new javax.swing.JButton();
        jButtonModificarCorredor = new javax.swing.JButton();
        jButtonAniadirCorredorNuevo = new javax.swing.JButton();
        jButtonVolver = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Listado de corredores");
        setIconImage(new javax.swing.ImageIcon(getClass().getResource("/gui/images/icono.jpg")).getImage());

        jPanelCorredores.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Listado de corredores", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N
        jPanelCorredores.setPreferredSize(new java.awt.Dimension(980, 224));

        jButtonBorrarCorredor.setText("Eliminar corredor");
        jButtonBorrarCorredor.setMaximumSize(new java.awt.Dimension(130, 25));
        jButtonBorrarCorredor.setMinimumSize(new java.awt.Dimension(130, 25));
        jButtonBorrarCorredor.setPreferredSize(new java.awt.Dimension(130, 25));
        jButtonBorrarCorredor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBorrarCorredorActionPerformed(evt);
            }
        });

        jLabelTitular.setText("null");

        jTableCorredores.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTableCorredores.setEditingColumn(0);
        jTableCorredores.setEditingRow(0);
        jScrollPaneCorredores.setViewportView(jTableCorredores);

        jButtonAniadirCorredorCarrera.setText("Añadir a carrera");
        jButtonAniadirCorredorCarrera.setMaximumSize(new java.awt.Dimension(130, 25));
        jButtonAniadirCorredorCarrera.setMinimumSize(new java.awt.Dimension(130, 25));
        jButtonAniadirCorredorCarrera.setOpaque(false);
        jButtonAniadirCorredorCarrera.setPreferredSize(new java.awt.Dimension(130, 25));
        jButtonAniadirCorredorCarrera.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAniadirCorredorCarreraActionPerformed(evt);
            }
        });

        jButtonModificarCorredor.setText("Modificar corredor");
        jButtonModificarCorredor.setMaximumSize(new java.awt.Dimension(130, 25));
        jButtonModificarCorredor.setMinimumSize(new java.awt.Dimension(130, 25));
        jButtonModificarCorredor.setOpaque(false);
        jButtonModificarCorredor.setPreferredSize(new java.awt.Dimension(130, 25));
        jButtonModificarCorredor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonModificarCorredorActionPerformed(evt);
            }
        });

        jButtonAniadirCorredorNuevo.setText("Nuevo corredor");
        jButtonAniadirCorredorNuevo.setMaximumSize(new java.awt.Dimension(130, 25));
        jButtonAniadirCorredorNuevo.setMinimumSize(new java.awt.Dimension(130, 25));
        jButtonAniadirCorredorNuevo.setPreferredSize(new java.awt.Dimension(130, 25));
        jButtonAniadirCorredorNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAniadirCorredorNuevoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelCorredoresLayout = new javax.swing.GroupLayout(jPanelCorredores);
        jPanelCorredores.setLayout(jPanelCorredoresLayout);
        jPanelCorredoresLayout.setHorizontalGroup(
            jPanelCorredoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCorredoresLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelCorredoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelTitular, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPaneCorredores, javax.swing.GroupLayout.DEFAULT_SIZE, 948, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelCorredoresLayout.createSequentialGroup()
                        .addComponent(jButtonAniadirCorredorCarrera, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonAniadirCorredorNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonModificarCorredor, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonBorrarCorredor, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanelCorredoresLayout.setVerticalGroup(
            jPanelCorredoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCorredoresLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelTitular)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPaneCorredores, javax.swing.GroupLayout.DEFAULT_SIZE, 343, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelCorredoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonAniadirCorredorCarrera, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonBorrarCorredor, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonModificarCorredor, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonAniadirCorredorNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11))
        );

        jButtonBorrarCorredor.getAccessibleContext().setAccessibleName("");
        jButtonBorrarCorredor.getAccessibleContext().setAccessibleDescription("");
        jButtonAniadirCorredorCarrera.getAccessibleContext().setAccessibleName("135");
        jButtonAniadirCorredorCarrera.getAccessibleContext().setAccessibleDescription("25");
        jButtonAniadirCorredorNuevo.getAccessibleContext().setAccessibleName("");
        jButtonAniadirCorredorNuevo.getAccessibleContext().setAccessibleDescription("");

        jButtonVolver.setText("Volver");
        jButtonVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonVolverActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelCorredores, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonVolver)
                .addGap(20, 20, 20))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelCorredores, javax.swing.GroupLayout.DEFAULT_SIZE, 449, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonVolver)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonVolverActionPerformed
        dispose();
    }//GEN-LAST:event_jButtonVolverActionPerformed

    //Metodo para añadir participantes a carreras
    private void jButtonAniadirCorredorCarreraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAniadirCorredorCarreraActionPerformed
        boolean resultado = false;
        if (!logicaAplicacion.verCorredores().isEmpty()) {
            try {
                int filaSeleccionada = jTableCorredores.convertRowIndexToModel(jTableCorredores.getSelectedRow());
                if (!carrera.getDorsales().isEmpty()) {
                    Corredor seleccionado = logicaAplicacion.buscaCorredor(corredoresDisponibles.get(filaSeleccionada).getDni());
                    resultado = logicaAplicacion.aniadirParticipante(carrera, seleccionado);
                    logicaAplicacion.eliminarCorredorDisponible(corredoresDisponibles, seleccionado);
                    cargarTablaCorredoresDisponibles();
                    if (!resultado) {
                        JOptionPane.showMessageDialog(this, "El corredor seleccionado ya está inscrito en está carrera y no se añadirá", "Confirmación", JOptionPane.WARNING_MESSAGE);
                    }
                } 
                if(carrera.getDorsales().isEmpty()) {
                    JOptionPane.showMessageDialog(this, "Se han completado todas las plazas disponibles para esta carrera", "Confirmación", JOptionPane.INFORMATION_MESSAGE);
                    jButtonAniadirCorredorCarrera.setEnabled(false);
                }
            } catch (ArrayIndexOutOfBoundsException ex) {
                JOptionPane.showMessageDialog(this, "Debe seleccionar un corredor", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "No hay corredores inscritos todavia", "Error", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_jButtonAniadirCorredorCarreraActionPerformed


    private void jButtonBorrarCorredorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBorrarCorredorActionPerformed
        if (!logicaAplicacion.verCorredores().isEmpty()) {
            try {
                int filaSeleccionada = jTableCorredores.convertRowIndexToModel(jTableCorredores.getSelectedRow());               
                int confirm = JOptionPane.showConfirmDialog(this, "¿Seguro que desea eliminar el corredor seleccionado?", "Eliminar corredor", JOptionPane.YES_NO_OPTION);
                if (confirm == JOptionPane.YES_OPTION) {
                    Corredor seleccionado = logicaAplicacion.verCorredores().get(filaSeleccionada);
                    logicaAplicacion.eliminarCorredor(seleccionado);
                    jTableCorredores.addRowSelectionInterval(0, 0);
                    cargarTabla();
                }
            } catch (ArrayIndexOutOfBoundsException ex) {
                JOptionPane.showMessageDialog(this, "Debe seleccionar un corredor", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "No hay corredores inscritos todavia", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButtonBorrarCorredorActionPerformed

    private void jButtonAniadirCorredorNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAniadirCorredorNuevoActionPerformed
        PantallaDatosCorredor pdco = new PantallaDatosCorredor((Frame) this.getParent(), true, logicaAplicacion);
        pdco.setVisible(true);
    }//GEN-LAST:event_jButtonAniadirCorredorNuevoActionPerformed

    private void jButtonModificarCorredorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonModificarCorredorActionPerformed
        if (!logicaAplicacion.verCorredores().isEmpty()) {
            try {
                int filaSeleccionada = jTableCorredores.convertRowIndexToModel(jTableCorredores.getSelectedRow());               
                int confirm = JOptionPane.showConfirmDialog(this, "¿Seguro que desea modificar el corredor seleccionado?", "Modificar corredor", JOptionPane.YES_NO_OPTION);
                if (confirm == JOptionPane.YES_OPTION) {
                    Corredor seleccionado = logicaAplicacion.verCorredores().get(filaSeleccionada);
                    PantallaDatosCorredor pdco = new PantallaDatosCorredor((Frame) this.getParent(), true, seleccionado);
                    pdco.setVisible(true);
                }
            } catch (ArrayIndexOutOfBoundsException ex) {
                JOptionPane.showMessageDialog(this, "Debe seleccionar un corredor", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "No hay corredores inscritos todavia", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButtonModificarCorredorActionPerformed

    /**
     * @param args the command line arguments
     */
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAniadirCorredorCarrera;
    private javax.swing.JButton jButtonAniadirCorredorNuevo;
    private javax.swing.JButton jButtonBorrarCorredor;
    private javax.swing.JButton jButtonModificarCorredor;
    private javax.swing.JButton jButtonVolver;
    private javax.swing.JLabel jLabelTitular;
    private javax.swing.JPanel jPanelCorredores;
    private javax.swing.JScrollPane jScrollPaneCorredores;
    private javax.swing.JTable jTableCorredores;
    // End of variables declaration//GEN-END:variables
}
