/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import Dto.Carrera;
import Dto.Corredor;
import gui.modelosTabla.FormatoFechaTabla;
import Dto.FormatoFecha;
import gui.modelosTabla.CorredoresTableModel;
import Logica.LogicaAplicacion;
import java.io.File;
import javax.swing.JOptionPane;

/**
 *
 * @author dbarriof
 */
public class PantallaListaCorredores extends javax.swing.JDialog {

    private LogicaAplicacion logicaAplicacion;
    private Carrera carrera;

    /**
     * Constructor para ver el listado completo de corredores dados de alta en
     * la aplicación
     *
     * @param parent
     * @param modal
     * @param listaCorredores
     */
    public PantallaListaCorredores(java.awt.Frame parent, boolean modal, LogicaAplicacion logicaAplicacion) {
        super(parent, modal);
        this.logicaAplicacion = logicaAplicacion;
        initComponents();
        cargarTabla();

        jButtonAniadir.setVisible(false);
        jLabelTitular.setText("Listado de corredores:");
    }

    /**
     * Constructor para ver el listado de corredores importados desde un fichero
     *
     * @param parent
     * @param modal
     * @param listaCorredores
     * @param importados
     */
    public PantallaListaCorredores(java.awt.Frame parent, boolean modal, LogicaAplicacion logicaAplicacion, File archivo) {
        super(parent, modal);
        this.logicaAplicacion = logicaAplicacion;
        logicaAplicacion.importarCorredores(archivo);
        initComponents();
        cargarTabla();

        jButtonAniadir.setVisible(false);
        jLabelTitular.setText("Corredores importados:");
    }

    /**
     * Constructor para mostrar listado de corredores y dar de alta en una
     * carrera
     *
     * @param parent
     * @param modal
     * @param listaCarreras
     * @param listaCorredores
     * @param carrera
     */
    public PantallaListaCorredores(java.awt.Dialog parent, boolean modal, LogicaAplicacion logicaAplicacion, Carrera carrera) {
        super(parent, modal);
        this.logicaAplicacion = logicaAplicacion;
        this.carrera = carrera;
        initComponents();

        cargarTabla();
        jLabelTitular.setText("Listado de corredores:");
    }

    public void cargarTabla() {
        CorredoresTableModel ctm = new CorredoresTableModel(logicaAplicacion.verCorredores());
        jTableCorredores.setModel(ctm);
        jTableCorredores.setRowSorter(ctm.ordenaTabla(ctm, 0));
        jTableCorredores.getColumnModel().getColumn(2).setCellRenderer(new FormatoFechaTabla());       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelCorredores = new javax.swing.JPanel();
        jLabelTitular = new javax.swing.JLabel();
        jScrollPaneCorredores = new javax.swing.JScrollPane();
        jTableCorredores = new javax.swing.JTable();
        jButtonVolver = new javax.swing.JButton();
        jButtonAniadir = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Listado de corredores");

        jPanelCorredores.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabelTitular.setText("null");

        jTableCorredores.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5"
            }
        ));
        jTableCorredores.setEditingColumn(0);
        jTableCorredores.setEditingRow(0);
        jScrollPaneCorredores.setViewportView(jTableCorredores);

        javax.swing.GroupLayout jPanelCorredoresLayout = new javax.swing.GroupLayout(jPanelCorredores);
        jPanelCorredores.setLayout(jPanelCorredoresLayout);
        jPanelCorredoresLayout.setHorizontalGroup(
            jPanelCorredoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCorredoresLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelCorredoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelTitular, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPaneCorredores, javax.swing.GroupLayout.DEFAULT_SIZE, 956, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanelCorredoresLayout.setVerticalGroup(
            jPanelCorredoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCorredoresLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelTitular)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPaneCorredores, javax.swing.GroupLayout.DEFAULT_SIZE, 347, Short.MAX_VALUE)
                .addContainerGap())
        );

        jButtonVolver.setText("Volver");
        jButtonVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonVolverActionPerformed(evt);
            }
        });

        jButtonAniadir.setText("Añadir");
        jButtonAniadir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAniadirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanelCorredores, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButtonAniadir)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonVolver)
                        .addGap(10, 10, 10)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelCorredores, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonVolver)
                    .addComponent(jButtonAniadir))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonVolverActionPerformed
        dispose();
    }//GEN-LAST:event_jButtonVolverActionPerformed

    private void jButtonAniadirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAniadirActionPerformed
        if (!carrera.getDorsales().isEmpty()) {
            int filaSeleccionada = jTableCorredores.convertRowIndexToModel(jTableCorredores.getSelectedRow());
            Corredor seleccionado = logicaAplicacion.buscaCorredor(logicaAplicacion.verCorredores().get(filaSeleccionada).getDni());
            boolean resultado = logicaAplicacion.aniadirParticipante(carrera, seleccionado);
            if (!resultado) {
                JOptionPane.showMessageDialog(this, "El corredor seleccionado ya está inscrito en está carrera y no se añadirá", "Confirmación", JOptionPane.WARNING_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Se han completado todas las plazas disponibles para esta carrera", "Confirmación", JOptionPane.OK_OPTION);
        }

    }//GEN-LAST:event_jButtonAniadirActionPerformed

    /**
     * @param args the command line arguments
     */
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAniadir;
    private javax.swing.JButton jButtonVolver;
    private javax.swing.JLabel jLabelTitular;
    private javax.swing.JPanel jPanelCorredores;
    private javax.swing.JScrollPane jScrollPaneCorredores;
    private javax.swing.JTable jTableCorredores;
    // End of variables declaration//GEN-END:variables
}
