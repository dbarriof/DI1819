/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import Logica.LogicaAplicacion;
import java.io.File;
import java.net.URL;
import java.util.Locale;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import org.openide.util.Exceptions;

/**
 *
 * @author dbarriof
 */
public class PantallaPrincipal extends javax.swing.JFrame {

    //Definicion de variables utilizadas
    private LogicaAplicacion logicaAplicacion;

    //Definicion de variables de pantallas
    private PantallaDatosCorredor pdco;
    private PantallaListaCorredores plco;
    private PantallaDatosCarrera pdca;
    private PantallaListaCarreras plca;
    private PantallaCronometro pic;

    /**
     * Creates new form PantallaPrincipal
     */
    public PantallaPrincipal() {
        logicaAplicacion = new LogicaAplicacion();
        logicaAplicacion.cargarDatos();
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooserFichImport = new javax.swing.JFileChooser();
        jPanelPantallaPrincipal = new javax.swing.JPanel();
        jLabelImagen = new javax.swing.JLabel();
        jButtonCerrar = new javax.swing.JButton();
        jMenuAplicacion = new javax.swing.JMenuBar();
        jMenuCorredores = new javax.swing.JMenu();
        jMenuItemAltaCorredor = new javax.swing.JMenuItem();
        jMenuItemModificarCorredor = new javax.swing.JMenuItem();
        jMenuItemEliminarCorredor = new javax.swing.JMenuItem();
        jMenuItemVerCorredores = new javax.swing.JMenuItem();
        jMenuItemImportarCorredores = new javax.swing.JMenuItem();
        jMenuCarreras = new javax.swing.JMenu();
        jMenuItemNuevaCarrera = new javax.swing.JMenuItem();
        jMenuItemVerCarreras = new javax.swing.JMenuItem();
        jMenuItemIniciarCarrera = new javax.swing.JMenuItem();
        jMenuFunciones = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Gesti√≥n de Carreras");
        setBounds(new java.awt.Rectangle(0, 0, 0, 0));
        setIconImage(new javax.swing.ImageIcon(getClass().getResource("/gui/images/icono.jpg")).getImage());
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanelPantallaPrincipal.setBackground(new java.awt.Color(0, 0, 0));
        jPanelPantallaPrincipal.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLabelImagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gui/images/runners.jpg"))); // NOI18N

        javax.swing.GroupLayout jPanelPantallaPrincipalLayout = new javax.swing.GroupLayout(jPanelPantallaPrincipal);
        jPanelPantallaPrincipal.setLayout(jPanelPantallaPrincipalLayout);
        jPanelPantallaPrincipalLayout.setHorizontalGroup(
            jPanelPantallaPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabelImagen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanelPantallaPrincipalLayout.setVerticalGroup(
            jPanelPantallaPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabelImagen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jButtonCerrar.setText("Salir");
        jButtonCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCerrarActionPerformed(evt);
            }
        });

        jMenuAplicacion.setPreferredSize(new java.awt.Dimension(118, 42));

        jMenuCorredores.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jMenuCorredores.setText("Corredores");
        jMenuCorredores.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jMenuCorredores.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jMenuCorredores.setPreferredSize(new java.awt.Dimension(75, 19));

        jMenuItemAltaCorredor.setText("Nuevo...");
        jMenuItemAltaCorredor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemAltaCorredorActionPerformed(evt);
            }
        });
        jMenuCorredores.add(jMenuItemAltaCorredor);

        jMenuItemModificarCorredor.setText("Modificar...");
        jMenuItemModificarCorredor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemModificarCorredorActionPerformed(evt);
            }
        });
        jMenuCorredores.add(jMenuItemModificarCorredor);

        jMenuItemEliminarCorredor.setText("Eliminar...");
        jMenuItemEliminarCorredor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemEliminarCorredorActionPerformed(evt);
            }
        });
        jMenuCorredores.add(jMenuItemEliminarCorredor);

        jMenuItemVerCorredores.setText("Ver...");
        jMenuItemVerCorredores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemVerCorredoresActionPerformed(evt);
            }
        });
        jMenuCorredores.add(jMenuItemVerCorredores);

        jMenuItemImportarCorredores.setText("Importar...");
        jMenuItemImportarCorredores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemImportarCorredoresActionPerformed(evt);
            }
        });
        jMenuCorredores.add(jMenuItemImportarCorredores);

        jMenuAplicacion.add(jMenuCorredores);

        jMenuCarreras.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jMenuCarreras.setText("Carreras");
        jMenuCarreras.setFont(jMenuCarreras.getFont());
        jMenuCarreras.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jMenuCarreras.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jMenuCarreras.setPreferredSize(new java.awt.Dimension(75, 19));

        jMenuItemNuevaCarrera.setText("Nueva...");
        jMenuItemNuevaCarrera.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jMenuItemNuevaCarrera.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemNuevaCarreraActionPerformed(evt);
            }
        });
        jMenuCarreras.add(jMenuItemNuevaCarrera);

        jMenuItemVerCarreras.setText("Ver...");
        jMenuItemVerCarreras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemVerCarrerasActionPerformed(evt);
            }
        });
        jMenuCarreras.add(jMenuItemVerCarreras);

        jMenuItemIniciarCarrera.setText("Iniciar...");
        jMenuItemIniciarCarrera.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemIniciarCarreraActionPerformed(evt);
            }
        });
        jMenuCarreras.add(jMenuItemIniciarCarrera);

        jMenuAplicacion.add(jMenuCarreras);

        jMenuFunciones.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jMenuFunciones.setText("Funciones");
        jMenuFunciones.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jMenuFunciones.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jMenuFunciones.setPreferredSize(new java.awt.Dimension(75, 19));
        jMenuAplicacion.add(jMenuFunciones);

        setJMenuBar(jMenuAplicacion);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanelPantallaPrincipal, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonCerrar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelPantallaPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButtonCerrar)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Boton para acceder al formulario de alta un nuevo corredor
     *
     * @param evt
     */
    private void jMenuItemAltaCorredorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemAltaCorredorActionPerformed
        pdco = new PantallaDatosCorredor(this, true, logicaAplicacion);
        pdco.setVisible(true);
    }//GEN-LAST:event_jMenuItemAltaCorredorActionPerformed
    /**
     * Boton para cerrar la aplicacion solicitando aceptacion
     *
     * @param evt
     */
    private void jButtonCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCerrarActionPerformed
        int salir = JOptionPane.showConfirmDialog(this, "¬øConfirma que quiere salir de la aplicaci√≥n?", "Cerrar aplicaci√≥n", JOptionPane.YES_NO_OPTION);
        if (salir == JOptionPane.YES_OPTION) {
            logicaAplicacion.guardarDatos();
            dispose();
        }
    }//GEN-LAST:event_jButtonCerrarActionPerformed
    /**
     * Boton para acceder al formulario de modificar los datos de un corredor
     *
     * @param evt
     */
    private void jMenuItemModificarCorredorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemModificarCorredorActionPerformed
        if (!logicaAplicacion.verCorredores().isEmpty()) {
            boolean salir = false;
            while (!salir) {
                String modifCorredor = JOptionPane.showInputDialog(this, "Indique el DNI del corredor", "Buscar corredor");
                if (modifCorredor == null) {
                    salir = true;
                } else {
                    if (logicaAplicacion.buscaCorredor(modifCorredor) != null) {
                        pdco = new PantallaDatosCorredor(this, true, logicaAplicacion.buscaCorredor(modifCorredor));
                        pdco.setVisible(true);
                        salir = true;
                    } else if (logicaAplicacion.buscaCorredor(modifCorredor) == null) {
                        int confirm = JOptionPane.showConfirmDialog(this, "No existe el corredor indicado \n ¬øRealizar una nueva busqueda?", "Error al buscar", JOptionPane.YES_NO_OPTION);
                        if (confirm == JOptionPane.NO_OPTION) {
                            salir = true;
                        }
                    }
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "No hay corredores inscritos todav√≠a", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jMenuItemModificarCorredorActionPerformed
    /**
     * Boton para seleccionar un fichero de donde importar corredores
     *
     * @param evt
     */
    private void jMenuItemImportarCorredoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemImportarCorredoresActionPerformed
        boolean selectFich = true;

        while (selectFich) {
            //Seleccionamos el fichero desde el que importar

            JFileChooser importarArchivo = new JFileChooser();
            importarArchivo.showOpenDialog(this);
            File archivo = importarArchivo.getSelectedFile();

            //Comprobamos que el fichero seleccionado no es null
            if (archivo == null) {
                selectFich = false;
            } else if (!archivo.getName().endsWith("csv")) {
                JOptionPane.showMessageDialog(this, "El fichero debe tener extension CSV y formato:\nNOMBRE, DNI, FECHA DE NACIMIENTO(DD-MM-YYYY), DIRECCION, TELEFONO", "Error al importar", JOptionPane.ERROR_MESSAGE);
            } else {
                //Solicitamos confirmacion para el fichero seleccionado
                int confirmar = JOptionPane.showConfirmDialog(this, "¬øConfirmar el archivo seleccionado?", "Confirmar", JOptionPane.YES_NO_OPTION);

                //En caso de confirmar se muestran los corredores que se van a importar
                if (confirmar == JOptionPane.YES_OPTION) {
                    selectFich = false;
                    plco = new PantallaListaCorredores(this, true, logicaAplicacion, archivo);
                    plco.setVisible(true);

                } else if (confirmar == JOptionPane.NO_OPTION) {

                    //Seleccionar un nuevo archivo si cancela el anterior o salir en caso contrario
                    int nuevaEleccion = JOptionPane.showConfirmDialog(this, "¬øSeleccionar otro fichero?", "Confirmar", JOptionPane.YES_NO_OPTION);

                    if (nuevaEleccion == JOptionPane.NO_OPTION) {
                        selectFich = false;
                    }
                }
            }
        }
    }//GEN-LAST:event_jMenuItemImportarCorredoresActionPerformed

    private void jMenuItemVerCorredoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemVerCorredoresActionPerformed
        if (!logicaAplicacion.verCorredores().isEmpty()) {
            plco = new PantallaListaCorredores(this, true, logicaAplicacion);
            plco.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(this, "No hay corredores inscritos todav√≠a", "Error", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_jMenuItemVerCorredoresActionPerformed

    private void jMenuItemEliminarCorredorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemEliminarCorredorActionPerformed
        if (!logicaAplicacion.verCorredores().isEmpty()) {
            boolean salir = false;
            while (!salir) {
                String elimCorredor = JOptionPane.showInputDialog(this, "Indique el DNI del corredor", "Buscar corredor");
                if (elimCorredor == null) {
                    salir = true;
                } else {
                    if (logicaAplicacion.buscaCorredor(elimCorredor) != null) {
                        pdco = new PantallaDatosCorredor(this, true, logicaAplicacion, logicaAplicacion.buscaCorredor(elimCorredor));
                        pdco.setVisible(true);
                        salir = true;
                    } else if (logicaAplicacion.buscaCorredor(elimCorredor) == null) {
                        int confirm = JOptionPane.showConfirmDialog(this, "No existe el corredor indicado \n ¬øRealizar una nueva busqueda?", "Error al buscar", JOptionPane.YES_NO_OPTION);
                        if (confirm == JOptionPane.NO_OPTION) {
                            salir = true;
                        }
                    }
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "No hay corredores inscritos todav√≠a", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jMenuItemEliminarCorredorActionPerformed

    private void jMenuItemNuevaCarreraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemNuevaCarreraActionPerformed
        pdca = new PantallaDatosCarrera(this, true, logicaAplicacion);
        pdca.setVisible(true);
    }//GEN-LAST:event_jMenuItemNuevaCarreraActionPerformed

    private void jMenuItemVerCarrerasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemVerCarrerasActionPerformed
        if (!logicaAplicacion.verCarreras().isEmpty()) {
            plca = new PantallaListaCarreras(this, true, logicaAplicacion);
            plca.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(this, "No hay carreras creadas todav√≠a", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jMenuItemVerCarrerasActionPerformed

    private void jMenuItemIniciarCarreraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemIniciarCarreraActionPerformed
        pic = new PantallaCronometro(this, true, logicaAplicacion);
        pic.setVisible(true);
    }//GEN-LAST:event_jMenuItemIniciarCarreraActionPerformed
    
    /**
     * Metodo que permite guardar los datos en caso de cieere de la aplicacion mediante X
     * @param evt 
     */
    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
         logicaAplicacion.guardarDatos();     
    }//GEN-LAST:event_formWindowClosing

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PantallaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PantallaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PantallaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PantallaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            //Establecemos ubicacion de la aplicacion
            Locale.setDefault(new Locale("es", "ES"));
            new PantallaPrincipal().setVisible(true);
        });
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCerrar;
    private javax.swing.JFileChooser jFileChooserFichImport;
    private javax.swing.JLabel jLabelImagen;
    private javax.swing.JMenuBar jMenuAplicacion;
    private javax.swing.JMenu jMenuCarreras;
    private javax.swing.JMenu jMenuCorredores;
    private javax.swing.JMenu jMenuFunciones;
    private javax.swing.JMenuItem jMenuItemAltaCorredor;
    private javax.swing.JMenuItem jMenuItemEliminarCorredor;
    private javax.swing.JMenuItem jMenuItemImportarCorredores;
    private javax.swing.JMenuItem jMenuItemIniciarCarrera;
    private javax.swing.JMenuItem jMenuItemModificarCorredor;
    private javax.swing.JMenuItem jMenuItemNuevaCarrera;
    private javax.swing.JMenuItem jMenuItemVerCarreras;
    private javax.swing.JMenuItem jMenuItemVerCorredores;
    private javax.swing.JPanel jPanelPantallaPrincipal;
    // End of variables declaration//GEN-END:variables

}
